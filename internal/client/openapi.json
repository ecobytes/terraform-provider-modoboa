{
    "openapi": "3.0.3",
    "info": {
        "title": "Modoboa API",
        "version": "v2"
    },
    "paths": {
        "/api/v2/accessrules/": {
            "get": {
                "operationId": "accessrules_list",
                "description": "AccessRule viewset.",
                "tags": [
                    "accessrules"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessRule"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "accessrules_create",
                "description": "AccessRule viewset.",
                "tags": [
                    "accessrules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accessrules/{id}/": {
            "get": {
                "operationId": "accessrules_retrieve",
                "description": "AccessRule viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this access rule.",
                        "required": true
                    }
                ],
                "tags": [
                    "accessrules"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "accessrules_update",
                "description": "AccessRule viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this access rule.",
                        "required": true
                    }
                ],
                "tags": [
                    "accessrules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRule"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "accessrules_partial_update",
                "description": "AccessRule viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this access rule.",
                        "required": true
                    }
                ],
                "tags": [
                    "accessrules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessRule"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessRule"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessRule"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "accessrules_destroy",
                "description": "AccessRule viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this access rule.",
                        "required": true
                    }
                ],
                "tags": [
                    "accessrules"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/api_token/": {
            "get": {
                "operationId": "account_api_token_retrieve",
                "description": "Get current API token",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "account_api_token_create",
                "description": "Generate new API token",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAPIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "account_api_token_destroy",
                "description": "Delete current API token",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/forward/": {
            "get": {
                "operationId": "account_forward_retrieve",
                "description": "Get or define user forward.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "account_forward_create",
                "description": "Get or define user forward.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/me/": {
            "get": {
                "operationId": "account_me_retrieve",
                "description": "Return information about connected user.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/account/me/password/": {
            "post": {
                "operationId": "account_me_password_create",
                "description": "Check current user password.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckPassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckPassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckPassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckPassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/account/tfa/disable/": {
            "post": {
                "operationId": "account_tfa_disable_create",
                "description": "Disable TFA.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/tfa/reset_codes/": {
            "post": {
                "operationId": "account_tfa_reset_codes_create",
                "description": "Reset recovery codes.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/tfa/setup/": {
            "post": {
                "operationId": "account_tfa_setup_create",
                "description": "Initiate TFA setup.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/tfa/setup/check/": {
            "post": {
                "operationId": "account_tfa_setup_check_create",
                "description": "Check TFA setup.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckTFASetup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckTFASetup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckTFASetup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/tfa/setup/key/": {
            "get": {
                "operationId": "account_tfa_setup_key_retrieve",
                "description": "Get a key and url to finalize the setup process.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/account/tfa/verify/": {
            "post": {
                "operationId": "account_tfa_verify_create",
                "description": "Verify given code validity.",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/accounts/": {
            "get": {
                "operationId": "accounts_list",
                "description": "ViewSet for User/Mailbox.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "accounts_create",
                "description": "ViewSet for User/Mailbox.",
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/": {
            "get": {
                "operationId": "accounts_retrieve",
                "description": "ViewSet for User/Mailbox.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "accounts_update",
                "description": "ViewSet for User/Mailbox.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "accounts_partial_update",
                "description": "ViewSet for User/Mailbox.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "accounts_destroy",
                "description": "ViewSet for User/Mailbox.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/delete/": {
            "post": {
                "operationId": "accounts_delete_create",
                "description": "Custom delete method that accepts body arguments.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/{id}/password/": {
            "put": {
                "operationId": "accounts_password_update",
                "description": "Change account password.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountPassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountPassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountPassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/exists/": {
            "get": {
                "operationId": "accounts_exists_retrieve",
                "description": "Check if account exists.\n\nRequires a valid email address as argument. Example:\n\nGET /exists/?email=user@test.com",
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/random_password/": {
            "get": {
                "operationId": "accounts_random_password_retrieve",
                "description": "Generate a random password.",
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/reset_password/": {
            "post": {
                "operationId": "accounts_reset_password_create",
                "description": "Reset account password and send a new one by SMS.",
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/accounts/validate/": {
            "post": {
                "operationId": "accounts_validate_create",
                "description": "Validate given account without creating it.",
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/address-books/default/": {
            "get": {
                "operationId": "address_books_default_retrieve",
                "description": "Return default user address book.",
                "tags": [
                    "address-books"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressBook"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/address-books/sync_from_cdav/": {
            "get": {
                "operationId": "address_books_sync_from_cdav_retrieve",
                "description": "Synchronize from CardDAV address book.",
                "tags": [
                    "address-books"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressBook"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/address-books/sync_to_cdav/": {
            "get": {
                "operationId": "address_books_sync_to_cdav_retrieve",
                "description": "Synchronize address book with CardDAV collection.",
                "tags": [
                    "address-books"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressBook"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/admin/components/": {
            "get": {
                "operationId": "admin_components_list",
                "description": "Retrieve information about installed components.",
                "tags": [
                    "admin"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModoboaComponent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/alarms/": {
            "get": {
                "operationId": "alarms_list",
                "description": "Viewset for Alarm.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "alarms"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAlarmList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/alarms/{id}/": {
            "get": {
                "operationId": "alarms_retrieve",
                "description": "Viewset for Alarm.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alarm.",
                        "required": true
                    }
                ],
                "tags": [
                    "alarms"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alarm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "alarms_destroy",
                "description": "Viewset for Alarm.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alarm.",
                        "required": true
                    }
                ],
                "tags": [
                    "alarms"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/alarms/{id}/switch/": {
            "patch": {
                "operationId": "alarms_switch_partial_update",
                "description": "Custom update method that switch status of an alarm.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alarm.",
                        "required": true
                    }
                ],
                "tags": [
                    "alarms"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlarm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlarm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlarm"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alarm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/alarms/bulk_delete/": {
            "delete": {
                "operationId": "alarms_bulk_delete_destroy",
                "description": "Delete multiple alarms at the same time.",
                "tags": [
                    "alarms"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/aliases/": {
            "get": {
                "operationId": "aliases_list",
                "description": "Viewset for Alias.",
                "tags": [
                    "aliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Alias"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "aliases_create",
                "description": "Viewset for Alias.",
                "tags": [
                    "aliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/aliases/{id}/": {
            "get": {
                "operationId": "aliases_retrieve",
                "description": "Viewset for Alias.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "aliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "aliases_update",
                "description": "Viewset for Alias.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "aliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "aliases_partial_update",
                "description": "Viewset for Alias.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "aliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAlias"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "aliases_destroy",
                "description": "Viewset for Alias.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "aliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/aliases/random_address/": {
            "get": {
                "operationId": "aliases_random_address_retrieve",
                "description": "Viewset for Alias.",
                "tags": [
                    "aliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/aliases/validate/": {
            "post": {
                "operationId": "aliases_validate_create",
                "description": "Validate given alias without creating it.",
                "tags": [
                    "aliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Alias"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/armessages/": {
            "get": {
                "operationId": "armessages_list",
                "description": "A viewset for ARmessage.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mbox",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mbox__user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "armessages"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ARMessage"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "armessages_create",
                "description": "A viewset for ARmessage.",
                "tags": [
                    "armessages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ARMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/armessages/{id}/": {
            "get": {
                "operationId": "armessages_retrieve",
                "description": "A viewset for ARmessage.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this a rmessage.",
                        "required": true
                    }
                ],
                "tags": [
                    "armessages"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ARMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "armessages_update",
                "description": "A viewset for ARmessage.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this a rmessage.",
                        "required": true
                    }
                ],
                "tags": [
                    "armessages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ARMessage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ARMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "armessages_partial_update",
                "description": "A viewset for ARmessage.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this a rmessage.",
                        "required": true
                    }
                ],
                "tags": [
                    "armessages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedARMessage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedARMessage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedARMessage"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ARMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/attendees/": {
            "get": {
                "operationId": "attendees_list",
                "description": "Return attendees available for current user.",
                "tags": [
                    "attendees"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attendee"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/attendees/{id}/": {
            "get": {
                "operationId": "attendees_retrieve",
                "description": "Attendee viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "attendees"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendee"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/categories/": {
            "get": {
                "operationId": "categories_list",
                "description": "Category ViewSet.",
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "categories_create",
                "description": "Category ViewSet.",
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/categories/{id}/": {
            "get": {
                "operationId": "categories_retrieve",
                "description": "Category ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "categories_update",
                "description": "Category ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "categories_partial_update",
                "description": "Category ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "categories_destroy",
                "description": "Category ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this category.",
                        "required": true
                    }
                ],
                "tags": [
                    "categories"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/contacts/": {
            "get": {
                "operationId": "contacts_list",
                "description": "Contact ViewSet.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contacts_create",
                "description": "Contact ViewSet.",
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/contacts/{id}/": {
            "get": {
                "operationId": "contacts_retrieve",
                "description": "Contact ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contacts_update",
                "description": "Contact ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contacts_partial_update",
                "description": "Contact ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContact"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contacts_destroy",
                "description": "Contact ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/credentials/{account_id}/": {
            "get": {
                "operationId": "credentials_retrieve",
                "description": "View to download a document.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "credentials"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountCredentials"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domainaliases/": {
            "get": {
                "operationId": "domainaliases_list",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DomainAlias"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DomainAlias"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "domainaliases_create",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domainaliases/{id}/": {
            "get": {
                "operationId": "domainaliases_retrieve",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "domainaliases_update",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainAlias"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "domainaliases_partial_update",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomainAlias"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomainAlias"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomainAlias"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAlias"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "domainaliases_destroy",
                "description": "ViewSet for DomainAlias.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain alias.",
                        "required": true
                    }
                ],
                "tags": [
                    "domainaliases"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/domains/": {
            "get": {
                "operationId": "domains_list",
                "description": "Retrieve a list of domains",
                "summary": "Retrieve a list of domains",
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Domain"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "domains_create",
                "description": "Create a new domain",
                "summary": "Create a new domain",
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/": {
            "get": {
                "operationId": "domains_retrieve",
                "description": "Retrieve a particular domain",
                "summary": "Retrieve a particular domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "domains_update",
                "description": "V2 viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "domains_partial_update",
                "description": "V2 viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/administrators/": {
            "get": {
                "operationId": "domains_administrators_retrieve",
                "description": "Retrieve all administrators of a domain.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainAdmin"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/administrators/add/": {
            "post": {
                "operationId": "domains_administrators_add_create",
                "description": "Add an administrator to a domain.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleDomainAdmin"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/administrators/remove/": {
            "post": {
                "operationId": "domains_administrators_remove_create",
                "description": "Remove an administrator from a domain.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleDomainAdmin"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleDomainAdmin"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/delete/": {
            "post": {
                "operationId": "domains_delete_create",
                "description": "Delete a particular domain",
                "summary": "Delete a particular domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDomain"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteDomain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/dmarc/alignment_stats/": {
            "get": {
                "operationId": "domains_dmarc_alignment_stats_retrieve",
                "description": "Override default get_throttle behaviour to assign throttle\nclasses to different actions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DMARCAligment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/{id}/dns_detail/": {
            "get": {
                "operationId": "domains_dns_detail_retrieve",
                "description": "A viewset to provide extra routes related to DNS information.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DNSDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/export/": {
            "get": {
                "operationId": "domains_export_retrieve",
                "description": "Export domains and aliases to CSV.",
                "tags": [
                    "domains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/domains/import/": {
            "post": {
                "operationId": "domains_import_create",
                "description": "Import domains and aliases from CSV file.",
                "tags": [
                    "domains"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CSVImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CSVImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/email-providers/": {
            "get": {
                "operationId": "email_providers_list",
                "description": "ViewSet class for EmailProvider.",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "email-providers"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailProvider"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "email_providers_create",
                "description": "ViewSet class for EmailProvider.",
                "tags": [
                    "email-providers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/email-providers/{id}/": {
            "get": {
                "operationId": "email_providers_retrieve",
                "description": "ViewSet class for EmailProvider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this email provider.",
                        "required": true
                    }
                ],
                "tags": [
                    "email-providers"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "email_providers_update",
                "description": "ViewSet class for EmailProvider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this email provider.",
                        "required": true
                    }
                ],
                "tags": [
                    "email-providers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "email_providers_partial_update",
                "description": "ViewSet class for EmailProvider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this email provider.",
                        "required": true
                    }
                ],
                "tags": [
                    "email-providers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmailProvider"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmailProvider"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmailProvider"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "email_providers_destroy",
                "description": "ViewSet class for EmailProvider.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this email provider.",
                        "required": true
                    }
                ],
                "tags": [
                    "email-providers"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/email-providers/check_associated_domain/": {
            "post": {
                "operationId": "email_providers_check_associated_domain_create",
                "description": "check that the associated domain is either the same as the provider,\nor if a local domain already exists.\nThis is to prevent errros on setup.",
                "tags": [
                    "email-providers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/email-providers/check_connection/": {
            "post": {
                "operationId": "email_providers_check_connection_create",
                "description": "check that provided information allow connection to imap server.",
                "tags": [
                    "email-providers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailProvider"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailProvider"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/emails/": {
            "get": {
                "operationId": "emails_list",
                "description": "EmailAddress viewset.",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "emails"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailAddressWithName"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/emails/{id}/": {
            "get": {
                "operationId": "emails_retrieve",
                "description": "EmailAddress viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this email address.",
                        "required": true
                    }
                ],
                "tags": [
                    "emails"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailAddressWithName"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/identities/": {
            "get": {
                "operationId": "identities_retrieve",
                "description": "Return all identities.",
                "tags": [
                    "identities"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/identities/export/": {
            "get": {
                "operationId": "identities_export_retrieve",
                "description": "Export accounts and aliases to CSV.",
                "tags": [
                    "identities"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/identities/import/": {
            "post": {
                "operationId": "identities_import_create",
                "description": "Import accounts and aliases from CSV file.",
                "tags": [
                    "identities"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CSVIdentityImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CSVIdentityImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/languages/": {
            "get": {
                "operationId": "languages_retrieve",
                "description": "Language viewset.",
                "tags": [
                    "languages"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/logs/audit-trail/": {
            "get": {
                "operationId": "logs_audit_trail_list",
                "description": "Log viewset.",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedLogList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/logs/audit-trail/{id}/": {
            "get": {
                "operationId": "logs_audit_trail_retrieve",
                "description": "Log viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this log.",
                        "required": true
                    }
                ],
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/logs/messages/": {
            "get": {
                "operationId": "logs_messages_list",
                "description": "Simple viewset to access message log.",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMaillogList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/logs/messages/{id}/": {
            "get": {
                "operationId": "logs_messages_retrieve",
                "description": "Simple viewset to access message log.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this maillog.",
                        "required": true
                    }
                ],
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Maillog"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/mailboxes/": {
            "get": {
                "operationId": "mailboxes_list",
                "description": "RO mailbox viewset.",
                "tags": [
                    "mailboxes"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mailbox"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/mailboxes/{id}/": {
            "get": {
                "operationId": "mailboxes_retrieve",
                "description": "RO mailbox viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this mailbox.",
                        "required": true
                    }
                ],
                "tags": [
                    "mailboxes"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mailbox"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/migrations/": {
            "get": {
                "operationId": "migrations_list",
                "description": "ViewSet class for Migration.",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "migrations"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Migration"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/migrations/{id}/": {
            "get": {
                "operationId": "migrations_retrieve",
                "description": "ViewSet class for Migration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this migration.",
                        "required": true
                    }
                ],
                "tags": [
                    "migrations"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Migration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "migrations_destroy",
                "description": "ViewSet class for Migration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this migration.",
                        "required": true
                    }
                ],
                "tags": [
                    "migrations"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/parameters/{id}/": {
            "get": {
                "operationId": "parameters_retrieve",
                "description": "Return all parameters for given app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A registered application name",
                        "required": true
                    }
                ],
                "tags": [
                    "parameters"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppParameters"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "parameters_update",
                "description": "Save parameters for given app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A registered application name",
                        "required": true
                    }
                ],
                "tags": [
                    "parameters"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/parameters/applications/": {
            "get": {
                "operationId": "parameters_applications_list",
                "description": "Return the list of registered applications.",
                "tags": [
                    "parameters"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Application"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/parameters/structure/": {
            "get": {
                "operationId": "parameters_structure_list",
                "description": "Return parameter schema.",
                "tags": [
                    "parameters"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Parameter"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/password_reset/": {
            "post": {
                "operationId": "password_reset_create",
                "description": "Recover password.",
                "tags": [
                    "password_reset"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/relaydomains/": {
            "get": {
                "operationId": "relaydomains_list",
                "description": "RelayDomain viewset.",
                "tags": [
                    "relaydomains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RelayDomain"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "relaydomains_create",
                "description": "RelayDomain viewset.",
                "tags": [
                    "relaydomains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelayDomain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/relaydomains/{id}/": {
            "get": {
                "operationId": "relaydomains_retrieve",
                "description": "RelayDomain viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "relaydomains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelayDomain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "relaydomains_update",
                "description": "RelayDomain viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "relaydomains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RelayDomain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelayDomain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "relaydomains_partial_update",
                "description": "RelayDomain viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "relaydomains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRelayDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRelayDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRelayDomain"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelayDomain"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "relaydomains_destroy",
                "description": "RelayDomain viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this domain.",
                        "required": true
                    }
                ],
                "tags": [
                    "relaydomains"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/reset_confirm/": {
            "post": {
                "operationId": "reset_confirm_create",
                "description": "Get and set new user password.",
                "tags": [
                    "reset_confirm"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/resources/{id}/": {
            "get": {
                "operationId": "resources_retrieve",
                "description": "Resources viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resources"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "resources_update",
                "description": "Resources viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Resources"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Resources"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Resources"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resources"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "resources_partial_update",
                "description": "Resources viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResources"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResources"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResources"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resources"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/senderaddresses/": {
            "get": {
                "operationId": "senderaddresses_list",
                "description": "View set for SenderAddress model.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mailbox",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "senderaddresses"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SenderAddress"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "senderaddresses_create",
                "description": "View set for SenderAddress model.",
                "tags": [
                    "senderaddresses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SenderAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/senderaddresses/{id}/": {
            "get": {
                "operationId": "senderaddresses_retrieve",
                "description": "View set for SenderAddress model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sender address.",
                        "required": true
                    }
                ],
                "tags": [
                    "senderaddresses"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SenderAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "senderaddresses_update",
                "description": "View set for SenderAddress model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sender address.",
                        "required": true
                    }
                ],
                "tags": [
                    "senderaddresses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderAddress"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SenderAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "senderaddresses_partial_update",
                "description": "View set for SenderAddress model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sender address.",
                        "required": true
                    }
                ],
                "tags": [
                    "senderaddresses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSenderAddress"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSenderAddress"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSenderAddress"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SenderAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "senderaddresses_destroy",
                "description": "View set for SenderAddress model.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sender address.",
                        "required": true
                    }
                ],
                "tags": [
                    "senderaddresses"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/shared-calendars/": {
            "get": {
                "operationId": "shared_calendars_list",
                "description": "Shared calendar viewset.",
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SharedCalendar"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "shared_calendars_create",
                "description": "Shared calendar viewset.",
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/shared-calendars/{calendar_pk}/events/": {
            "get": {
                "operationId": "shared_calendars_events_list",
                "description": "Get a list of event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ROEvent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "shared_calendars_events_create",
                "description": "Create new event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/shared-calendars/{calendar_pk}/events/{id}/": {
            "get": {
                "operationId": "shared_calendars_events_retrieve",
                "description": "Get a specific event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ROEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "shared_calendars_events_update",
                "description": "Update existing event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "shared_calendars_events_partial_update",
                "description": "Update existing event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "shared_calendars_events_destroy",
                "description": "Destroy a specific event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/shared-calendars/{calendar_pk}/events/import_from_file/": {
            "post": {
                "operationId": "shared_calendars_events_import_from_file_create",
                "description": "Import events from file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/shared-calendars/{id}/": {
            "get": {
                "operationId": "shared_calendars_retrieve",
                "description": "Shared calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this shared calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "shared_calendars_update",
                "description": "Shared calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this shared calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SharedCalendar"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "shared_calendars_partial_update",
                "description": "Shared calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this shared calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSharedCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSharedCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSharedCalendar"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharedCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "shared_calendars_destroy",
                "description": "Shared calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this shared calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "shared-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/shared-calendars/check_token/": {
            "post": {
                "operationId": "shared_calendars_check_token_create",
                "description": "Check token validity.",
                "tags": [
                    "shared-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sms_totp/": {
            "post": {
                "operationId": "sms_totp_create",
                "description": "Check SMS Totp code.",
                "tags": [
                    "sms_totp"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/statistics/": {
            "get": {
                "operationId": "statistics_list",
                "description": "A viewset to provide extra route related to mail statistics.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "end",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "graphic",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "in": "query",
                        "name": "gset",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "schema": {
                            "enum": [
                                "day",
                                "week",
                                "month",
                                "year",
                                "custom"
                            ],
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "* `day` - Day\n* `week` - Week\n* `month` - Month\n* `year` - Year\n* `custom` - Custom",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "searchquery",
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "tags": [
                    "statistics"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Statistics"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/token/": {
            "post": {
                "operationId": "token_create",
                "description": "We overwrite this view to deal with password scheme update.",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/token/refresh/": {
            "post": {
                "operationId": "token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/transports/": {
            "get": {
                "operationId": "transports_list",
                "description": "Return the list of all defined transport backends.",
                "tags": [
                    "transports"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransportBackend"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user-calendars/": {
            "get": {
                "operationId": "user_calendars_list",
                "description": "Calendar viewset.",
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserCalendar"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_calendars_create",
                "description": "Calendar viewset.",
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user-calendars/{calendar_pk}/events/": {
            "get": {
                "operationId": "user_calendars_events_list",
                "description": "Get a list of event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ROEvent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_calendars_events_create",
                "description": "Create new event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user-calendars/{calendar_pk}/events/{id}/": {
            "get": {
                "operationId": "user_calendars_events_retrieve",
                "description": "Get a specific event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ROEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_calendars_events_update",
                "description": "Update existing event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_calendars_events_partial_update",
                "description": "Update existing event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWritableEvent"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_calendars_events_destroy",
                "description": "Destroy a specific event.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-\\.@]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/user-calendars/{calendar_pk}/events/import_from_file/": {
            "post": {
                "operationId": "user_calendars_events_import_from_file_create",
                "description": "Import events from file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "calendar_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WritableEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WritableEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user-calendars/{id}/": {
            "get": {
                "operationId": "user_calendars_retrieve",
                "description": "Calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_calendars_update",
                "description": "Calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCalendar"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_calendars_partial_update",
                "description": "Calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserCalendar"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserCalendar"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserCalendar"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCalendar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_calendars_destroy",
                "description": "Calendar viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user calendar.",
                        "required": true
                    }
                ],
                "tags": [
                    "user-calendars"
                ],
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/user-calendars/check_token/": {
            "post": {
                "operationId": "user_calendars_check_token_create",
                "description": "Check token validity.",
                "tags": [
                    "user-calendars"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckToken"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwt2FAAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ARMessage": {
                "type": "object",
                "description": "A serializer for ARmessage.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject that will appear in sent emails",
                        "maxLength": 255
                    },
                    "content": {
                        "type": "string",
                        "description": "The content that will appear in sent emails"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Activate/Deactivate your auto reply"
                    },
                    "fromdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "untildate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mbox": {
                        "type": "integer"
                    }
                },
                "required": [
                    "content",
                    "id",
                    "mbox",
                    "subject"
                ]
            },
            "AccessRule": {
                "type": "object",
                "description": "AccessRule serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "calendar": {
                        "type": "integer"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "calendar",
                    "mailbox",
                    "pk"
                ]
            },
            "Account": {
                "type": "object",
                "description": "Base account serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "master_user": {
                        "type": "boolean",
                        "title": "Allow mailboxes access",
                        "description": "Allow this administrator to access user mailboxes"
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "role": {
                        "type": "string",
                        "description": "Return role.",
                        "readOnly": true
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Prefered language to display pages.\n\n* `br` - breton\n* `cs` - čeština\n* `de` - deutsch\n* `en` - english\n* `el` - ελληνικά\n* `es` - español\n* `fi` - Suomalainen\n* `fr` - français\n* `it` - italiano\n* `ja` - 日本の\n* `nl` - nederlands\n* `pt` - português\n* `pt-br` - português (BR)\n* `pl` - polski\n* `ro` - Română\n* `ru` - русский\n* `sv` - svenska\n* `tr` - türk\n* `zh-hant` - 中文（台灣）"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 128
                    },
                    "secondary_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "An alternative e-mail address, can be used for recovery needs.",
                        "maxLength": 254
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of administered domains (resellers and domain administrators only).",
                        "readOnly": true
                    },
                    "tfa_enabled": {
                        "type": "boolean"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "required": [
                    "domains",
                    "pk",
                    "role",
                    "username"
                ]
            },
            "AccountPassword": {
                "type": "object",
                "description": "A serializer used to change a user password.",
                "properties": {
                    "password": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "new_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "password"
                ]
            },
            "AddressBook": {
                "type": "object",
                "description": "Address book serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "pk",
                    "url"
                ]
            },
            "Alarm": {
                "type": "object",
                "description": "Serializer for Alarm related endpoints.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "closed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "title": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "domain": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nested"
                            }
                        ],
                        "readOnly": true
                    },
                    "mailbox": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nested"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "domain",
                    "id",
                    "internal_name",
                    "mailbox",
                    "title"
                ]
            },
            "Alias": {
                "type": "object",
                "description": "Alias serializer for v2 API.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this alias"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        },
                        "description": "A list of recipient"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modification": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "address",
                    "last_modification",
                    "pk",
                    "recipients"
                ]
            },
            "AppParameters": {
                "type": "object",
                "description": "Serializer for application parameters.",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "params": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "required": [
                    "label",
                    "params"
                ]
            },
            "Application": {
                "type": "object",
                "description": "Application serializer.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "is_extension": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_extension",
                    "label",
                    "name"
                ]
            },
            "Attendee": {
                "type": "object",
                "description": "Attendee serializer.",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "display_name",
                    "email"
                ]
            },
            "CSVIdentityImport": {
                "type": "object",
                "description": "Custom serializer for identity import.",
                "properties": {
                    "sourcefile": {
                        "type": "string",
                        "format": "uri"
                    },
                    "sepchar": {
                        "type": "string",
                        "default": ";"
                    },
                    "continue_if_exists": {
                        "type": "boolean",
                        "default": false
                    },
                    "crypt_password": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "crypt_password",
                    "sourcefile"
                ]
            },
            "CSVImport": {
                "type": "object",
                "description": "Base serializer for all CSV import endpoints.",
                "properties": {
                    "sourcefile": {
                        "type": "string",
                        "format": "uri"
                    },
                    "sepchar": {
                        "type": "string",
                        "default": ";"
                    },
                    "continue_if_exists": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "sourcefile"
                ]
            },
            "Category": {
                "type": "object",
                "description": "Serializer for Category.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "name",
                    "pk"
                ]
            },
            "CheckPassword": {
                "type": "object",
                "description": "Simple serializer to check user password.",
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "CheckTFASetup": {
                "type": "object",
                "description": "Serializer used to finalize 2FA setup.",
                "properties": {
                    "pin_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "pin_code"
                ]
            },
            "CheckToken": {
                "type": "object",
                "description": "Serializer for the check_token action.",
                "properties": {
                    "calendar": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "calendar",
                    "token"
                ]
            },
            "Contact": {
                "type": "object",
                "description": "Contact serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailAddress"
                        }
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        }
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "zipcode": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "note": {
                        "type": "string"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "display_name": {
                        "type": "string",
                        "maxLength": 60
                    }
                },
                "required": [
                    "emails",
                    "pk"
                ]
            },
            "CreateDomainAdmin": {
                "type": "object",
                "description": "Sub serializer for domain administrator creation.",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "with_mailbox": {
                        "type": "boolean",
                        "default": false
                    },
                    "with_aliases": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "username"
                ]
            },
            "DMARCAligment": {
                "type": "object",
                "properties": {
                    "aligned": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/Source"
                            }
                        }
                    },
                    "trusted": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/Source"
                            }
                        }
                    },
                    "forwarded": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/Source"
                            }
                        }
                    },
                    "failed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/Source"
                            }
                        }
                    }
                },
                "required": [
                    "aligned",
                    "failed",
                    "forwarded",
                    "trusted"
                ]
            },
            "DNSBLResult": {
                "type": "object",
                "description": "Serializer for DNSBLResult.",
                "properties": {
                    "provider": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "mx": {
                        "$ref": "#/components/schemas/MXRecord"
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 45
                    }
                },
                "required": [
                    "mx",
                    "provider"
                ]
            },
            "DNSDetail": {
                "type": "object",
                "properties": {
                    "mx_records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MXRecord"
                        }
                    },
                    "dnsbl_results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DNSBLResult"
                        }
                    },
                    "autoconfig_record": {
                        "$ref": "#/components/schemas/DNSRecord"
                    },
                    "autodiscover_record": {
                        "$ref": "#/components/schemas/DNSRecord"
                    },
                    "spf_record": {
                        "$ref": "#/components/schemas/DNSRecord"
                    },
                    "dkim_record": {
                        "$ref": "#/components/schemas/DNSRecord"
                    },
                    "dmarc_record": {
                        "$ref": "#/components/schemas/DNSRecord"
                    }
                },
                "required": [
                    "autoconfig_record",
                    "autodiscover_record",
                    "dkim_record",
                    "dmarc_record",
                    "dnsbl_results",
                    "mx_records",
                    "spf_record"
                ]
            },
            "DNSRecord": {
                "type": "object",
                "description": "Serializer for DNSRecord.",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DNSRecordTypeEnum"
                    },
                    "value": {
                        "type": "string"
                    },
                    "is_valid": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "DNSRecordTypeEnum": {
                "enum": [
                    "spf",
                    "dkim",
                    "dmarc",
                    "autoconfig",
                    "autodiscover"
                ],
                "type": "string",
                "description": "* `spf` - SPF\n* `dkim` - DKIM\n* `dmarc` - DMARC\n* `autoconfig` - Autoconfig\n* `autodiscover` - Autodiscover"
            },
            "DeleteAccount": {
                "type": "object",
                "description": "Serializer used with delete operation.",
                "properties": {
                    "keepdir": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "DeleteDomain": {
                "type": "object",
                "description": "Serializer used with delete operation.",
                "properties": {
                    "keep_folder": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "DkimKeyLengthEnum": {
                "enum": [
                    1024,
                    2048,
                    4096
                ],
                "type": "integer",
                "description": "* `1024` - 1024\n* `2048` - 2048\n* `4096` - 4096"
            },
            "Domain": {
                "type": "object",
                "description": "Domain serializer for v2 API.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The domain name",
                        "maxLength": 253
                    },
                    "quota": {
                        "type": "string",
                        "description": "Quota shared between mailboxes. Can be expressed in KB, MB (default) or GB. A value of 0 means no quota."
                    },
                    "default_mailbox_quota": {
                        "type": "string",
                        "description": "Default quota in MB applied to mailboxes. A value of 0 means no quota."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this domain"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "enable_dkim": {
                        "type": "boolean",
                        "title": "Enable DKIM signing",
                        "description": "If you activate this feature, a DKIM key will be generated for this domain."
                    },
                    "dkim_key_selector": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "dkim_key_length": {
                        "nullable": true,
                        "title": "Key length",
                        "minimum": 0,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DkimKeyLengthEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "dkim_public_key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dkim_private_key_path": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "mailbox_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mbalias_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domainalias_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "dns_global_status": {
                        "type": "string",
                        "description": "Return global DNS status.",
                        "readOnly": true
                    },
                    "message_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "title": "Message sending limit",
                        "description": "Number of messages this domain can send per day"
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_modification": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "domain_admin": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreateDomainAdmin"
                            }
                        ],
                        "writeOnly": true
                    },
                    "transport": {
                        "$ref": "#/components/schemas/Transport"
                    },
                    "opened_alarms_count": {
                        "type": "integer",
                        "description": "Number of alarms currently opened for this domain.",
                        "readOnly": true
                    }
                },
                "required": [
                    "creation",
                    "dkim_public_key",
                    "dns_global_status",
                    "domainalias_count",
                    "last_modification",
                    "mailbox_count",
                    "mbalias_count",
                    "name",
                    "opened_alarms_count",
                    "pk"
                ]
            },
            "DomainAdmin": {
                "type": "object",
                "description": "Serializer used for administrator related routes.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "DomainAlias": {
                "type": "object",
                "description": "Base DomainAlias serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The alias name",
                        "maxLength": 100
                    },
                    "target": {
                        "type": "integer",
                        "description": "The domain this alias points to"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this alias"
                    }
                },
                "required": [
                    "name",
                    "pk",
                    "target"
                ]
            },
            "EmailAddress": {
                "type": "object",
                "description": "Email address serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "type": {
                        "$ref": "#/components/schemas/Type9e9Enum"
                    }
                },
                "required": [
                    "address",
                    "pk",
                    "type"
                ]
            },
            "EmailAddressWithName": {
                "type": "object",
                "description": "Email address + contact name serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "type": {
                        "$ref": "#/components/schemas/Type9e9Enum"
                    },
                    "display_name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "address",
                    "display_name",
                    "pk",
                    "type"
                ]
            },
            "EmailProvider": {
                "type": "object",
                "description": "Serializer class for EmailProvider.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailProviderDomain"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "secured": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "address",
                    "id",
                    "name"
                ]
            },
            "EmailProviderDomain": {
                "type": "object",
                "description": "Serializer class for EmailProviderDomain.",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "new_domain": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GetAccountCredentials": {
                "type": "object",
                "description": "A serializer for get account credential view.",
                "properties": {
                    "account_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "account_id"
                ]
            },
            "Graph": {
                "type": "object",
                "description": "A serializer to represent a graph.",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "series": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GraphCurve"
                        }
                    }
                },
                "required": [
                    "series",
                    "title"
                ]
            },
            "GraphCurve": {
                "type": "object",
                "description": "A serializer to represent a curve in a graph.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "backgroundColor": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GraphPoint"
                        }
                    }
                },
                "required": [
                    "backgroundColor",
                    "data",
                    "name"
                ]
            },
            "GraphPoint": {
                "type": "object",
                "description": "A serializer to represent a point in a curve.",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "double"
                    },
                    "y": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "x",
                    "y"
                ]
            },
            "LanguageEnum": {
                "enum": [
                    "br",
                    "cs",
                    "de",
                    "en",
                    "el",
                    "es",
                    "fi",
                    "fr",
                    "it",
                    "ja",
                    "nl",
                    "pt",
                    "pt-br",
                    "pl",
                    "ro",
                    "ru",
                    "sv",
                    "tr",
                    "zh-hant"
                ],
                "type": "string",
                "description": "* `br` - breton\n* `cs` - čeština\n* `de` - deutsch\n* `en` - english\n* `el` - ελληνικά\n* `es` - español\n* `fi` - Suomalainen\n* `fr` - français\n* `it` - italiano\n* `ja` - 日本の\n* `nl` - nederlands\n* `pt` - português\n* `pt-br` - português (BR)\n* `pl` - polski\n* `ro` - Română\n* `ru` - русский\n* `sv` - svenska\n* `tr` - türk\n* `zh-hant` - 中文（台灣）"
            },
            "Log": {
                "type": "object",
                "description": "Log serializer.",
                "properties": {
                    "date_created": {
                        "type": "string",
                        "readOnly": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "logger": {
                        "type": "string",
                        "maxLength": 30
                    }
                },
                "required": [
                    "date_created",
                    "level",
                    "logger",
                    "message"
                ]
            },
            "MXRecord": {
                "type": "object",
                "description": "Serializer for MXRecord.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "address": {
                        "type": "string"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "address",
                    "name",
                    "updated"
                ]
            },
            "Mailbox": {
                "type": "object",
                "description": "Mailbox serializer.",
                "properties": {
                    "pk": {
                        "type": "integer"
                    },
                    "full_address": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "full_address",
                    "pk"
                ]
            },
            "Maillog": {
                "type": "object",
                "description": "Serializer for Maillog model.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "queue_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sender": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "rcpt": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "original_rcpt": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "maxLength": 254
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 15
                    }
                },
                "required": [
                    "date",
                    "id",
                    "queue_id",
                    "rcpt",
                    "sender",
                    "size",
                    "status"
                ]
            },
            "Migration": {
                "type": "object",
                "description": "Serializer class for Migration.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nested"
                            }
                        ],
                        "readOnly": true
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 254
                    }
                },
                "required": [
                    "id",
                    "mailbox",
                    "provider",
                    "username"
                ]
            },
            "ModoboaComponent": {
                "type": "object",
                "description": "Serializer used for information endpoint.",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "last_version": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "update": {
                        "type": "boolean",
                        "default": false
                    },
                    "changelog_url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "description",
                    "label",
                    "name",
                    "version"
                ]
            },
            "Nested": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modification": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The domain name",
                        "maxLength": 253
                    },
                    "quota": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "default_mailbox_quota": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "message_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "title": "Message sending limit",
                        "description": "Number of messages this domain can send per day"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this domain"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "enable_dns_checks": {
                        "type": "boolean",
                        "description": "Check to enable DNS checks for this domain"
                    },
                    "enable_dkim": {
                        "type": "boolean",
                        "title": "Enable DKIM signing",
                        "description": "If you activate this feature, a DKIM key will be generated for this domain."
                    },
                    "dkim_key_selector": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "dkim_key_length": {
                        "nullable": true,
                        "title": "Key length",
                        "minimum": 0,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DkimKeyLengthEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "dkim_public_key": {
                        "type": "string"
                    },
                    "dkim_private_key_path": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "transport": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "last_modification",
                    "name"
                ]
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "PaginatedAlarmList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alarm"
                        }
                    }
                }
            },
            "PaginatedLogList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                }
            },
            "PaginatedMaillogList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Maillog"
                        }
                    }
                }
            },
            "Parameter": {
                "type": "object",
                "description": "Parameter serializer.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "help_text": {
                        "type": "string"
                    },
                    "display": {
                        "type": "string"
                    },
                    "widget": {
                        "type": "string"
                    },
                    "choices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterChoice"
                        }
                    }
                },
                "required": [
                    "choices",
                    "display",
                    "help_text",
                    "label",
                    "name",
                    "widget"
                ]
            },
            "ParameterChoice": {
                "type": "object",
                "description": "Parameter choice serializer.",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "text",
                    "value"
                ]
            },
            "PatchedARMessage": {
                "type": "object",
                "description": "A serializer for ARmessage.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject that will appear in sent emails",
                        "maxLength": 255
                    },
                    "content": {
                        "type": "string",
                        "description": "The content that will appear in sent emails"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Activate/Deactivate your auto reply"
                    },
                    "fromdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "untildate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mbox": {
                        "type": "integer"
                    }
                }
            },
            "PatchedAccessRule": {
                "type": "object",
                "description": "AccessRule serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "calendar": {
                        "type": "integer"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedAlarm": {
                "type": "object",
                "description": "Serializer for Alarm related endpoints.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "closed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "title": {
                        "type": "string"
                    },
                    "internal_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "domain": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nested"
                            }
                        ],
                        "readOnly": true
                    },
                    "mailbox": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nested"
                            }
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedAlias": {
                "type": "object",
                "description": "Alias serializer for v2 API.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this alias"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        },
                        "description": "A list of recipient"
                    },
                    "expire_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modification": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedCategory": {
                "type": "object",
                "description": "Serializer for Category.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    }
                }
            },
            "PatchedContact": {
                "type": "object",
                "description": "Contact serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailAddress"
                        }
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        }
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "zipcode": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "note": {
                        "type": "string"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "display_name": {
                        "type": "string",
                        "maxLength": 60
                    }
                }
            },
            "PatchedDomain": {
                "type": "object",
                "description": "Domain serializer for v2 API.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The domain name",
                        "maxLength": 253
                    },
                    "quota": {
                        "type": "string",
                        "description": "Quota shared between mailboxes. Can be expressed in KB, MB (default) or GB. A value of 0 means no quota."
                    },
                    "default_mailbox_quota": {
                        "type": "string",
                        "description": "Default quota in MB applied to mailboxes. A value of 0 means no quota."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this domain"
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "enable_dkim": {
                        "type": "boolean",
                        "title": "Enable DKIM signing",
                        "description": "If you activate this feature, a DKIM key will be generated for this domain."
                    },
                    "dkim_key_selector": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "dkim_key_length": {
                        "nullable": true,
                        "title": "Key length",
                        "minimum": 0,
                        "maximum": 2147483647,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DkimKeyLengthEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "dkim_public_key": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dkim_private_key_path": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "mailbox_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mbalias_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domainalias_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "dns_global_status": {
                        "type": "string",
                        "description": "Return global DNS status.",
                        "readOnly": true
                    },
                    "message_limit": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "title": "Message sending limit",
                        "description": "Number of messages this domain can send per day"
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_modification": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "domain_admin": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreateDomainAdmin"
                            }
                        ],
                        "writeOnly": true
                    },
                    "transport": {
                        "$ref": "#/components/schemas/Transport"
                    },
                    "opened_alarms_count": {
                        "type": "integer",
                        "description": "Number of alarms currently opened for this domain.",
                        "readOnly": true
                    }
                }
            },
            "PatchedDomainAlias": {
                "type": "object",
                "description": "Base DomainAlias serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The alias name",
                        "maxLength": 100
                    },
                    "target": {
                        "type": "integer",
                        "description": "The domain this alias points to"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this alias"
                    }
                }
            },
            "PatchedEmailProvider": {
                "type": "object",
                "description": "Serializer class for EmailProvider.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailProviderDomain"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "secured": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedRelayDomain": {
                "type": "object",
                "description": "RelayDomain serializer class.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The domain name",
                        "maxLength": 253
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this domain"
                    },
                    "transport": {
                        "$ref": "#/components/schemas/Transport"
                    },
                    "enable_dkim": {
                        "type": "boolean",
                        "title": "Enable DKIM signing",
                        "description": "If you activate this feature, a DKIM key will be generated for this domain."
                    },
                    "dkim_key_selector": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "dkim_public_key": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedResources": {
                "type": "object",
                "description": "Resources serializer.",
                "properties": {
                    "domains": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "domain_aliases": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "mailboxes": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "mailbox_aliases": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "domain_admins": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "quota": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "PatchedSenderAddress": {
                "type": "object",
                "description": "Base Alias serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email"
                    },
                    "mailbox": {
                        "type": "integer"
                    }
                }
            },
            "PatchedSharedCalendar": {
                "type": "object",
                "description": "Shared calendar serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 7
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain": {
                        "$ref": "#/components/schemas/Domain"
                    },
                    "full_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "share_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserCalendar": {
                "type": "object",
                "description": "User calendar serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 7
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "full_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "share_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedWritableAccount": {
                "type": "object",
                "description": "Add support for aliases and sender addresses.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "master_user": {
                        "type": "boolean",
                        "title": "Allow mailboxes access",
                        "description": "Allow this administrator to access user mailboxes"
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Prefered language to display pages.\n\n* `br` - breton\n* `cs` - čeština\n* `de` - deutsch\n* `en` - english\n* `el` - ελληνικά\n* `es` - español\n* `fi` - Suomalainen\n* `fr` - français\n* `it` - italiano\n* `ja` - 日本の\n* `nl` - nederlands\n* `pt` - português\n* `pt-br` - português (BR)\n* `pl` - polski\n* `ro` - Română\n* `ru` - русский\n* `sv` - svenska\n* `tr` - türk\n* `zh-hant` - 中文（台灣）"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 128
                    },
                    "secondary_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "An alternative e-mail address, can be used for recovery needs.",
                        "maxLength": 254
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tfa_enabled": {
                        "type": "boolean"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "aliases": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WritableResource"
                        }
                    }
                }
            },
            "PatchedWritableEvent": {
                "type": "object",
                "description": "Event serializer for write operations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allDay": {
                        "type": "boolean",
                        "default": false
                    },
                    "color": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendee"
                        }
                    },
                    "calendar": {
                        "type": "integer"
                    },
                    "new_calendar_type": {
                        "type": "string"
                    }
                }
            },
            "PhoneNumber": {
                "type": "object",
                "description": "Phone number serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 40
                    },
                    "type": {
                        "$ref": "#/components/schemas/PhoneNumberTypeEnum"
                    }
                },
                "required": [
                    "number",
                    "pk",
                    "type"
                ]
            },
            "PhoneNumberTypeEnum": {
                "enum": [
                    "home",
                    "work",
                    "other",
                    "main",
                    "cell",
                    "fax",
                    "pager"
                ],
                "type": "string",
                "description": "* `home` - Home\n* `work` - Work\n* `other` - Other\n* `main` - Main\n* `cell` - Cellular\n* `fax` - Fax\n* `pager` - Pager"
            },
            "ROEvent": {
                "type": "object",
                "description": "Event serializer for read operations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allDay": {
                        "type": "boolean",
                        "default": false
                    },
                    "color": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendee"
                        }
                    },
                    "calendar": {
                        "$ref": "#/components/schemas/SharedCalendar"
                    }
                },
                "required": [
                    "calendar",
                    "color",
                    "end",
                    "id",
                    "start",
                    "title"
                ]
            },
            "RelayDomain": {
                "type": "object",
                "description": "RelayDomain serializer class.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The domain name",
                        "maxLength": 253
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Check to activate this domain"
                    },
                    "transport": {
                        "$ref": "#/components/schemas/Transport"
                    },
                    "enable_dkim": {
                        "type": "boolean",
                        "title": "Enable DKIM signing",
                        "description": "If you activate this feature, a DKIM key will be generated for this domain."
                    },
                    "dkim_key_selector": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "dkim_public_key": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "dkim_public_key",
                    "name",
                    "pk",
                    "transport"
                ]
            },
            "ResetPassword": {
                "type": "object",
                "description": "Serializer by the reset password endpoint.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "Resources": {
                "type": "object",
                "description": "Resources serializer.",
                "properties": {
                    "domains": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "domain_aliases": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "mailboxes": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "mailbox_aliases": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "domain_admins": {
                        "type": "integer",
                        "minimum": -1
                    },
                    "quota": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "domain_admins",
                    "domain_aliases",
                    "domains",
                    "mailbox_aliases",
                    "mailboxes",
                    "quota"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "DomainAdmins",
                    "Resellers",
                    "SimpleUsers",
                    "SuperAdmins"
                ],
                "type": "string",
                "description": "* `DomainAdmins` - Domain administrator\n* `Resellers` - Reseller\n* `SimpleUsers` - Simple user\n* `SuperAdmins` - Super administrator"
            },
            "SenderAddress": {
                "type": "object",
                "description": "Base Alias serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "address": {
                        "type": "string",
                        "format": "email"
                    },
                    "mailbox": {
                        "type": "integer"
                    }
                },
                "required": [
                    "address",
                    "mailbox",
                    "pk"
                ]
            },
            "SharedCalendar": {
                "type": "object",
                "description": "Shared calendar serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 7
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "domain": {
                        "$ref": "#/components/schemas/Domain"
                    },
                    "full_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "share_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "domain",
                    "full_url",
                    "name",
                    "path",
                    "pk",
                    "share_url"
                ]
            },
            "SimpleDomainAdmin": {
                "type": "object",
                "description": "Serializer used for add/remove operations.",
                "properties": {
                    "account": {
                        "type": "integer"
                    }
                },
                "required": [
                    "account"
                ]
            },
            "Source": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "spf": {
                        "$ref": "#/components/schemas/TestResult"
                    },
                    "dkim": {
                        "$ref": "#/components/schemas/TestResult"
                    }
                },
                "required": [
                    "dkim",
                    "spf",
                    "total"
                ]
            },
            "Statistics": {
                "type": "object",
                "description": "Serializer to return statistics.",
                "properties": {
                    "graphs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Graph"
                        }
                    }
                },
                "required": [
                    "graphs"
                ]
            },
            "StatusEnum": {
                "enum": [
                    1,
                    2
                ],
                "type": "integer",
                "description": "* `1` - Opened\n* `2` - Closed"
            },
            "TestResult": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "integer"
                    },
                    "failure": {
                        "type": "integer"
                    }
                },
                "required": [
                    "failure",
                    "success"
                ]
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "password",
                    "refresh",
                    "username"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "Transport": {
                "type": "object",
                "description": "Serializer for Transport model.",
                "properties": {
                    "service": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "required": [
                    "service",
                    "settings"
                ]
            },
            "TransportBackend": {
                "type": "object",
                "description": "Serializer for transport backend.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransportBackendSetting"
                        }
                    }
                },
                "required": [
                    "name",
                    "settings"
                ]
            },
            "TransportBackendSetting": {
                "type": "object",
                "description": "Serializer for transport backend setting.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "default": "str"
                    },
                    "required": {
                        "type": "boolean",
                        "default": true
                    },
                    "default": {
                        "type": "string"
                    }
                },
                "required": [
                    "label",
                    "name"
                ]
            },
            "Type9e9Enum": {
                "enum": [
                    "home",
                    "work",
                    "other"
                ],
                "type": "string",
                "description": "* `home` - Home\n* `work` - Work\n* `other` - Other"
            },
            "UserAPIToken": {
                "type": "object",
                "description": "Serializer used by API access routes.",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UserCalendar": {
                "type": "object",
                "description": "User calendar serializer.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 7
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "full_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "share_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "full_url",
                    "name",
                    "path",
                    "pk",
                    "share_url"
                ]
            },
            "WritableAccount": {
                "type": "object",
                "description": "Add support for aliases and sender addresses.",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "master_user": {
                        "type": "boolean",
                        "title": "Allow mailboxes access",
                        "description": "Allow this administrator to access user mailboxes"
                    },
                    "mailbox": {
                        "$ref": "#/components/schemas/Mailbox"
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Prefered language to display pages.\n\n* `br` - breton\n* `cs` - čeština\n* `de` - deutsch\n* `en` - english\n* `el` - ελληνικά\n* `es` - español\n* `fi` - Suomalainen\n* `fr` - français\n* `it` - italiano\n* `ja` - 日本の\n* `nl` - nederlands\n* `pt` - português\n* `pt-br` - português (BR)\n* `pl` - polski\n* `ro` - Română\n* `ru` - русский\n* `sv` - svenska\n* `tr` - türk\n* `zh-hant` - 中文（台灣）"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 128
                    },
                    "secondary_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "An alternative e-mail address, can be used for recovery needs.",
                        "maxLength": 254
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tfa_enabled": {
                        "type": "boolean"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "password": {
                        "type": "string"
                    },
                    "aliases": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WritableResource"
                        }
                    }
                },
                "required": [
                    "pk",
                    "role",
                    "username"
                ]
            },
            "WritableEvent": {
                "type": "object",
                "description": "Event serializer for write operations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allDay": {
                        "type": "boolean",
                        "default": false
                    },
                    "color": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendee"
                        }
                    },
                    "calendar": {
                        "type": "integer"
                    },
                    "new_calendar_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "calendar",
                    "color",
                    "end",
                    "id",
                    "start",
                    "title"
                ]
            },
            "WritableResource": {
                "type": "object",
                "description": "Serializer used to update resource.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 254
                    },
                    "max_value": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "name"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwt2FAAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    }
}